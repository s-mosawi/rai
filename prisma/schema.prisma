generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum OtpFor {
  LOG_IN
  SIGN_UP
  RESET_PASSWORD
}

enum ApplicationStatus {
  REVIEWING
  REJECTED
  AWAITING_PAYMENT
  PAID
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  isVerified Boolean  @default(false)
  isAdmin    Boolean  @default(false)
  name       String
  email      String   @unique
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  otps         Otp[]
  applications Application[]
}

model Otp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String?  @db.ObjectId
  isUsed    Boolean  @default(false)
  userEmail String?
  for       OtpFor
  code      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User? @relation(fields: [userId], references: [id])
}

model Application {
  id                  String            @id @default(auto()) @map("_id") @db.ObjectId
  uId                 String?           @unique
  userId              String            @db.ObjectId
  isBlocked           Boolean           @default(false)
  status              ApplicationStatus @default(REVIEWING)
  certificateImgUrl   String?
  certificateFileUrl  String?
  businessName        String
  businessAddress     String
  businessSector      String
  businessSize        String
  businessWebsite     String?
  businessLogoUrl     String
  pledgeUrl           String
  aiPolicyUrl         String?
  isoCertificationUrl String?
  contactName         String
  contactEmail        String
  contactPhone        String
  otherInfo           Json
  rejectionReason     String?
  expiresAt           DateTime?
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Pledge {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  date        String
  signature   String
  email       String
  organisation String
  city        String
  role        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
